#!/usr/bin/env kaiju

#entry("Program : Main");

#use("Person.kj");
#use("Atom.kj");

class Program
{
	static var a = 1;
	static var b = 2;

	static Main(...)
	{
		Program:Print("Program arguments:", String:newLine);
		foreach(a in arguments)
			Program:Print(a, String:newLine);

		if({arguments.Count() > 2})
		{
			Program:a = arguments.Get(1).ToInt();
			Program:b = arguments.Get(2).ToInt();
		}

		Program:Print(String:newLine);
		
		var c = {Program:a + Program:b};
		Program:Print("a + b = ", c, String:newLine);

		var p = new Person("john", {c + 20});
		Program:Print(p.name, " age is ", p.age, String:newLine);
		var tmp = p.age;

		Program:Print(String:newLine);
		
		while(true)
		{
			if({tmp <= 10})
				break;
			tmp = {tmp - 1};
			if({tmp < 15})
				continue;
			Program:Print("while ", tmp, " > 10", String:newLine);
		}

		Program:Print(String:newLine);
		
		for(var i = 0; {i < tmp}; {i + 1})
			Program:Print("for i = ", i, String:newLine);

		Program:Print(String:newLine);
		
		if(false)
			Program:Print("if false", String:newLine);
		else if({tmp == 10})
			Program:Print("else if ", tmp, " = 10", String:newLine);
		else
			Program:Print("else", String:newLine);

		Program:Print(String:newLine);
		
		var a = new Array(4);
		a.Set(0, 1);
		a.Set(1, 3);
		a.Set(2, 3);
		a.Set(3, 7);
		foreach(v in a)
			Program:Print("foreach ", v, String:newLine);

		Program:Print(String:newLine);
		
		var t = "hello world!";
		Program:Print(t, String:newLine);

		t.Append(" Dat ass!");
		Program:Print(t, String:newLine);

		Program:Print(String:newLine);

		var to = {t typeof String};		
		Program:Print("is String? ", to, String:newLine);

		to = {t typeof Int};
		Program:Print("is Int? ", to, String:newLine);

		to = {t hasmethod Append};
		Program:Print("has Append method? ", to, String:newLine);

		to = {t hasmethod Div};
		Program:Print("has Div method? ", to, String:newLine);

		to = {t hasfield size};
		Program:Print("has size field? ", to, String:newLine);

		return 42;
	}

	static Print(...)
	{
		foreach(arg in arguments)
		{
			if({arg typeof Int})
				#inject("dbgi :*$arg->Int/___Data.___data");
			else if({arg typeof Float})
				#inject("dbgf :*$arg->Float/___Data.___data");
			else if({arg typeof String})
			{
				#inject("!data address ptr 0");
				#inject("mova $ptr :*$arg->String/___Data.___data");
				#inject("dbgb :$ptr");
			}
			else if({arg typeof Bool})
			{
				#inject("!data bytes ___true 84, 82, 85, 69, 0");
				#inject("!data bytes ___false 70, 65, 76, 83, 69, 0");
				#inject("movi regi:0 :*$arg->Bool/___Data.___data");
				#inject("jifi 0 @___printTrue @___printFalse");
				#inject("!jump ___printTrue");
				#inject("dbgb $___true");
				#inject("goto @___printEnd");
				#inject("!jump ___printFalse");
				#inject("dbgb $___false");
				#inject("!jump ___printEnd");
			}
		}
	}
}
